name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: student_scores
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo_mysql, xml

      - name: Install dependencies
        run: composer install --no-progress --no-suggest --prefer-dist

      - name: Copy .env.testing
        run: cp .env.example .env.testing

      - name: Configure env for MySQL
        run: |
          php -r "file_put_contents('.env.testing', str_replace(
            ['DB_HOST=127.0.0.1','DB_PORT=3306','DB_DATABASE=homestead'],
            ['DB_HOST=127.0.0.1','DB_PORT=3306','DB_DATABASE=student_scores'],
            file_get_contents('.env.testing')
          ));"

      - name: Generate key
        run: php artisan key:generate --env=.env.testing

      - name: Run migrations
        run: php artisan migrate --env=.env.testing --force

      - name: Run PHPUnit
        run: vendor/bin/phpunit --configuration phpunit.xml
  deploy:
    name: Deploy to Server
    needs: tests
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts

      - name: Sync code to server
        run: |
          rsync -avz --delete \
            --exclude='.git*' \
            --exclude='node_modules' \
            ./ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/path/to/your/app

      - name: Remote Artisan commands
        run: |
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} << 'EOF'
            cd /path/to/your/app
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan queue:restart
          EOF
